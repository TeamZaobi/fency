# 凿壁项目网站维护规则

## 网站结构

网站采用单页面生成模式，主要包含：
# 凿壁项目网站维护规则

## 网站结构

网站采用单页面生成模式，主要包含：

- 主索引页 [index.html](mdc:index.html) - 动态读取元数据展示内容卡片
- 元数据索引 [metadata.json](mdc:metadata.json) - 所有页面的元数据

内容页面按分类存放在以下目录：
- [pages/ai-tech/](mdc:pages/ai-tech) - AI技术与生态
- [pages/info-upgrade/](mdc:pages/info-upgrade) - 信息化升级
- [pages/knowledge/](mdc:pages/knowledge) - 知识报告
- [pages/research/](mdc:pages/research) - 科研辅助

## 元数据规范

每个HTML页面在`metadata.json`中都有对应条目，格式如下：

```json
{
  "id": "pages/分类目录/文件名.html",
  "path": "pages/分类目录/文件名.html",
  "title": "页面标题 | 凿壁",
  "lastModifiedDate": "YYYY-MM-DDTHH:MM:SS.sssZ",
  "category": "分类名称",
  "description": "页面内容简短描述...",
  "keywords": ["关键词1", "关键词2", "..."],
  "publish-date": "YYYY-MM-DD"
}
```

**重要时间规则**：
1. **服务器当前日期**：`publish-date`字段必须使用创建/更新元数据时的**当前服务器日期**，绝不能使用未来日期
2. **日期格式**：必须使用`YYYY-MM-DD`格式（如：`2025-04-20`）
3. **禁止时间穿越**：使用未来日期会导致索引页无法显示内容项
4. **排序机制**：文章在首页按`publish-date`倒序排列，最新日期显示在最前面

## HTML页面要求

所有HTML页面必须：
1. 是完整的HTML5文档
2. 包含必要元标签：`publish-date`（**当前服务器日期**）, `category`（四种指定代码之一）, `description`, `keywords`
3. 分类代码必须是规定的四种之一：`ai-tech`, `info-upgrade`, `knowledge`, `research`
4. 页面内显示的发布日期必须与`<meta name="publish-date">`的值**完全一致**
5. 包含返回首页链接
6. 页面底部包含作者信息

## 文件操作规则

### 创建新页面
1. **单一内容页面**: 在正确分类目录下创建独立的HTML文件。
2. **多文档融合页面**: 基于指定文件夹内的多个Markdown文件，通过特定流程（融合、筛选、分析）生成聚合型HTML文件，并存放在合适的分类目录下。
3. 确保生成的HTML文件符合结构要求（元数据、必要元素等）。
4. 更新`metadata.json`以包含新页面的条目。

### 移动页面（更改分类）
1. 更新HTML文件中的分类元数据
2. 将文件从源目录移动到目标目录
3. 更新`metadata.json`中的条目（id, path, category）
4. 确认删除原文件

### 更新元数据
1. 备份当前`metadata.json`
2. 更新相应条目和`lastUpdated`字段
3. 验证JSON格式

## 最佳实践

1. 进行重要操作前先备份关键文件
2. 确保HTML文件分类与所在目录一致
3. 所有用户可见内容必须使用简体中文
4. 定期检查页面链接的正确性
5. **注意部署环境差异:** 项目部署在 GitHub Pages 上，通常位于子目录。维护时需确保代码（特别是 JS/HTML）中使用相对路径引用内部资源，避免因路径问题导致线上错误。